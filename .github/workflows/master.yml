name: master

#on:
#  push:
#    branches: [ master ]
#    paths:
#      - 'src/realtime/*'
#  pull_request:
#    branches: [ master ]
#    paths:
#      - 'src/realtime/*'
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  laravel-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/copytube
    steps:
      - uses: actions/checkout@v2

      - name: Format Checks
        run: |
          npm run fmt:check

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8'
          tools: composer

      - name: Lint Checks
        run: |
          composer install
          composer dump-autoload -o
          composer lint

  laravel-backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/copytube
    steps:
      - uses: actions/checkout@v2

      - name: Laravel Backend Tests
        env:
          XDEBUG: ""
          DEBUGBAR_ENABLE: false
        run: |
          docker-compose up -d sql
          docker-compose build --parallel redis phpfpm
          docker-compose up -d redis phpfpm > /dev/null
          docker exec copytube_phpfpm php artisan migrate
          docker exec copytube_phpfpm php artisan db:seed
          docker exec copytube_phpfpm vendor/bin/phpunit

#  laravel-frontend-tests:
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: src/copytube
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup PHP and Composer
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8'
#          tools: composer
#
#
#      - name: Laravel Frontend Tests
#        run: |
#          npm ci > /dev/null
#          composer install > /dev/null
#          npm run dev > /dev/null
#          docker-compose build --parallel
#          docker-compose up -d > /dev/null
#          sleep 12
#          docker exec copytube_phpfpm make test_dusk
##         docker exec copytube_phpfpm php artisan dusk tests/Browser/Components/AddCommentComponentTest.php
##         docker exec copytube_phpfpm php artisan dusk:install

  realtime-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Deno
        uses: denolib/setup-deno@v2
      - name: Realtime Linter Check
        run: |
          cd src/realtime
          deno lint --unstable

      - name: Realtime Format Check
        run: |
          cd src/realtime
          deno fmt --check

  realtime-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Realtime Tests
        run: |
          docker-compose build --parallel redis realtime
          docker-compose up -d redis realtime
          sleep 20
          docker exec copytube_realtime deno test --coverage=cov -A tests/unit
          docker exec copytube_realtime deno test
          docker exec copytube_realtime deno coverage cov
          docker exec copytube_realtime deno coverage --lcov cov > cov.lcov
      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          name: copytube-realtime
          files: cov.lcov
